CC=gcc
LD=gcc

define make_config
$(patsubst %=$1,-D%,$(filter %=$1,$(CONFIGS)))
endef

CONFIG_Y=$(call make_config,y)
CONFIG_M=$(call make_config,m)
CFLAGS=-g -Wall -Werror $(CONFIG_Y) $(CONFIG_M)

-include $(PROJECT_PATH)/config
-include Kbuild

PHONY+=build $(subdirs) $(build_subdirs)

.PHONY:$(PHONY)
.SILENT:force

define do_make
$(MAKE) -C $(@:$1-%=%) -w -f $(PROJECT_PATH)/Makefile.build $2
endef

y=$(filter %.o,$(obj-y))
m=$(filter %.o,$(obj-m))
objs=$(strip $(y) $(m))
subdirs=$(strip $(filter-out %.o,$(obj-y) $(obj-m)))
build_subdirs=$(subdirs:%=build-%)
clean_subdirs=$(subdirs:%=clean.rec-%)
cleanall_subdirs=$(subdirs:%=cleanall.rec-%)

%.o: %.c
	$(CC) -c $< $(CFLAGS) -o $@

built-in.o:$(build_subdirs) $(objs)
	$(if $(strip $(subdirs))$(strip $(objs)), \
		ld $(objs) -r $(subdirs:%=%/built-in.o) -o $@, \
		ar -rcs $@)

clean.rec:$(clean_subdirs)
	rm -f *.o

cleanall.rec:$(cleanall_subdirs)
	rm -f *.o
	rm -f tags

$(build_subdirs):force
	$(call do_make,build,built-in.o)

$(clean_subdirs):force
	$(call do_make,clean.rec,clean.rec)

$(cleanall_subdirs):force
	$(call do_make,cleanall.rec,cleanall.rec)

force:
	true

cleanf:
	rm -f test
	rm -f test.o built-in.o
	rm -f a/test_a.o a/built-in.o
	rm -f b/test_b.o b/built-in.o
	rm -f b/c/test_c.o b/c/built-in.o
